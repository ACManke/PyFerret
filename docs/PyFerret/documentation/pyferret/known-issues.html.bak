 
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML+RDFa 1.1//EN">
<html lang="en" dir="ltr" version="HTML+RDFa 1.1"
xmlns:content="http://purl.org/rss/1.0/modules/content/"
xmlns:dc="http://purl.org/dc/terms/"
xmlns:foaf="http://xmlns.com/foaf/0.1/"
xmlns:og="http://ogp.me/ns#"
xmlns:rdfs="https://www.w3.org/2000/01/rdf-schema#"
xmlns:sioc="http://rdfs.org/sioc/ns#"
xmlns:sioct="http://rdfs.org/sioc/types#"
xmlns:skos="https://www.w3.org/2004/02/skos/core#"
xmlns:xsd="https://www.w3.org/2001/XMLSchema#"
xmlns:schema="http://schema.org/">
<head profile="https://www.w3.org/1999/xhtml/vocab">
<title>PyFerret Known Issues and Release Notes - Ferret/PyFerret Documentation</title>

<link rel="stylesheet" href="../../modules/system/system.base.css">
<link rel="stylesheet" href="../../modules/system/system.menus.css">
<link rel="stylesheet" href="../../modules/system/system.messages.css">
<link rel="stylesheet" href="../../modules/system/system.theme.css">

<link rel="stylesheet" href="../../sites/all/modules/jquery_update/replace/ui/themes/base/minified/jquery.ui.core.min.css">
<link rel="stylesheet" href="../../sites/all/modules/jquery_update/replace/ui/themes/base/minified/jquery.ui.theme.min.css">
<link rel="stylesheet" href="../../sites/all/modules/jquery_update/replace/ui/themes/base/minified/jquery.ui.menu.min.css">
<link rel="stylesheet" href="../../sites/all/modules/jquery_update/replace/ui/themes/base/minified/jquery.ui.autocomplete.min.css">

<link rel="stylesheet" href="../../sites/all/modules/calendar/css/calendar_multiday.css">
<link rel="stylesheet" href="../../modules/field/theme/field.css">
<link rel="stylesheet" href="../../sites/all/modules/scald/modules/fields/mee/css/editor-global.css">
<link rel="stylesheet" href="../../modules/node/node.css">
<link rel="stylesheet" href="../../sites/all/modules/scald_file/scald_file.css">
<link rel="stylesheet" href="../../modules/search/search.css">
<link rel="stylesheet" href="../../modules/user/user.css">
<link rel="stylesheet" href="../../sites/all/modules/views/css/views.css">
<link rel="stylesheet" href="../../sites/all/modules/ckeditor/css/ckeditor.css">

<link rel="stylesheet" href="../../sites/all/modules/ctools/css/ctools.css">
<link rel="stylesheet" href="../../sites/all/modules/custom_search/custom_search.css">
<link rel="stylesheet" href="../../sites/all/modules/search_autocomplete/css/themes/minimal.css">
<link rel="stylesheet" href="../../sites/all/libraries/superfish/css/superfish.css">
<link rel="stylesheet" href="../../sites/all/libraries/superfish/css/superfish-smallscreen.css">
<link rel="stylesheet" href="../../sites/all/libraries/superfish/css/superfish-vertical.css">

<link rel="stylesheet" href="../../sites/all/themes/pacific_marine/css/ckeditor_custom.css">

<link rel="stylesheet" href="../../sites/all/themes/omega/alpha/css/alpha-reset.css">
<link rel="stylesheet" href="../../sites/all/themes/omega/alpha/css/alpha-mobile.css">
<link rel="stylesheet" href="../../sites/all/themes/omega/alpha/css/alpha-alpha.css">
<link rel="stylesheet" href="../../sites/all/themes/omega/omega/css/formalize.css">
<link rel="stylesheet" href="../../sites/all/themes/omega/omega/css/omega-text.css">
<link rel="stylesheet" href="../../sites/all/themes/omega/omega/css/omega-branding.css">
<link rel="stylesheet" href="../../sites/all/themes/omega/omega/css/omega-menu.css">
<link rel="stylesheet" href="../../sites/all/themes/omega/omega/css/omega-forms.css">
<link rel="stylesheet" href="../../sites/all/themes/omega/omega/css/omega-visuals.css">
<link rel="stylesheet" href="../../sites/all/themes/pacific_marine/css/global.css">



<link rel="stylesheet" href="../../sites/all/themes/pacific_marine/css/pacific-marine-alpha-default.css">
<link rel="stylesheet" href="../../sites/all/themes/pacific_marine/css/pacific-marine-alpha-default-wide.css">
<link rel="stylesheet" href="../../sites/all/themes/omega/alpha/css/grid/alpha_default/wide/alpha-default-wide-12.css">


</head>
<body class="html not-front not-logged-in page-node page-node- page-node-555 node-type-documentation-page context-documentation">
  <div id="body-bg-top"></div>
  <div id="skip-link">
    <a href="#main-content" class="element-invisible element-focusable">Skip to main content</a>
  </div>
    <div class="page clearfix" id="page">
      <header id="section-header" class="section section-header">
  <div id="zone-header-wrapper" class="zone-wrapper zone-header-wrapper clearfix">  
  <div id="zone-header" class="zone zone-header clearfix container-12">
    <div class="grid-7 region region-branding" id="region-branding">
  <div class="region-inner region-branding-inner">
        <div class="branding-data clearfix">
            <div class="logo-img">
        <a href="../../index.html" rel="home" title=""><img src="../../sites/all/themes/pacific_marine/images/ferret-banner.png" alt="" id="logo" /></a>
		</div>
                </div>
          </div>
</div><div class="grid-5 region region-header-first" id="region-header-first">
  <div class="region-inner region-header-first-inner">
    <div class="block block-block block-4 block-block-4 odd block-without-title" id="block-block-4">
  <div class="block-inner clearfix">

  </div>
</div>
  </div>
</div>  </div>
</div>  </div>
</div><div id="zone-menu-wrapper" class="zone-wrapper zone-menu-wrapper clearfix">  
  <div id="zone-menu" class="zone zone-menu clearfix container-12">
    <div class="grid-12 region region-menu" id="region-menu">
  <div class="region-inner region-menu-inner">
        <div class="block block-system block-menu block-main-menu block-system-main-menu odd block-without-title" id="block-system-main-menu">
  <div class="block-inner clearfix">
                
    <div class="content clearfix">
      <ul class="menu">
	  <li class="first expanded"><a href="../../index.html">Home</a></li>
<li class="leaf"><a href="../ferret-documentation.html">Documentation</a></li>
<li class="leaf"><a href="../../faq/ferret-faqs.html">FAQ</a></li>
<li class="collapsed"><a href="downloads.html">Downloads</a></li>
<li class="collapsed"><a href="../pyferret-support.html">Support</a></li>
</ul>    </div>
  </div>
</div>  </div>
</div>
  </div>
</div></header> 
<section id="section-content" class="section section-content">
<div id="zone-preface-wrapper" class="zone-wrapper zone-preface-wrapper clearfix">  
<div id="zone-preface" class="zone zone-preface clearfix equal-height-container container-12">
<div class="grid-3 region region-preface-first equal-height-element" id="region-preface-first">
<div class="region-inner region-preface-first-inner">
</div>
</div><div class="grid-9 region region-preface-second equal-height-element" id="region-preface-second">
<div class="region-inner region-preface-second-inner">
</div>
</div>  </div>
</div><div id="zone-content-wrapper" class="zone-wrapper zone-content-wrapper clearfix sidebar">  
<div id="zone-content" class="zone zone-content clearfix equal-height-container container-12">    

        <aside class="grid-3 region region-sidebar-first equal-height-element" id="region-sidebar-first">
  <div class="region-inner region-sidebar-first-inner">
    <div class="block block-superfish block-1 block-superfish-1 odd block-without-title" id="block-superfish-1">
  <div class="block-inner clearfix">
                
    <div class="content clearfix">
      <!-- start -->
      <ul  id="superfish-1" class="menu sf-menu sf-main-menu sf-vertical sf-style-none sf-total-items-8 sf-parent-items-4 sf-single-items-4"><li id="menu-1620-1" class="first odd sf-item-1 sf-depth-2 sf-no-children"><a href="../version-763-release-notes.html" class="sf-depth-2">Current Release Notes</a></li>
<li id="menu-1170-1" class="active-trail middle even sf-item-2 sf-depth-2 sf-total-children-17 sf-parent-children-15 sf-single-children-2 menuparent">
<a href="../users-guide/users-guide.html" class="sf-depth-2 menuparent">Ferret Users Guide</a>
</li>
<li id="menu-1336-1" class="middle odd sf-item-3 sf-depth-2 sf-no-children"><a href="../all-release-notes.html" class="sf-depth-2">Previous Release Notes</a></li>
<li id="menu-1339-1" class="middle even sf-item-4 sf-depth-2 sf-total-children-15 sf-parent-children-1 sf-single-children-14 menuparent"><a href="../ferret-tutorials.html" class="sf-depth-2 menuparent">Tutorials and Demos</a></li>

<li id="menu-1333-1" class="middle odd sf-item-5 sf-depth-2 sf-total-children-13 sf-parent-children-1 sf-single-children-12 menuparent"><a href="../pyferret.html" class="sf-depth-2 menuparent">PyFerret</a>
</li>

<li id="menu-1147-1" class="middle even sf-item-6 sf-depth-2 sf-total-children-3 sf-parent-children-0 sf-single-children-3 menuparent"><a href="../opendap/opendap-usage-in-ferret.html" class="sf-depth-2 menuparent">OPeNDAP</a></li>


<!-- <li id="menu-1592-1" class="middle odd sf-item-7 sf-depth-2 sf-no-children"><a href="../ferret-publications.html" class="sf-depth-2">Ferret Publications</a></li>
<li id="menu-1389-1" class="last even sf-item-8 sf-depth-2 sf-no-children"><a href="../acknowledging-ferret.html" class="sf-depth-2">Acknowledging Ferret</a></li> -->  
</ul>  <!-- end -->    </div>
  </div>
</div>  </div>
</aside><div class="grid-9 region region-content equal-height-element" id="region-content">
  <div class="region-inner region-content-inner">
<a id="main-content"></a>
<h1 class="title" id="page-title">PyFerret Known Issues and Release Notes</h1>
<div class="block block-system block-main block-system-main odd block-without-title" id="block-system-main">
<div class="block-inner clearfix">
 
<div class="content clearfix">
<article about="/Ferret/documentation/pyferret/known-issues" typeof="sioc:Item foaf:Document" class="node node-documentation-page node-promoted node-published node-not-sticky author-kobrien odd clearfix" id="node-documentation-page-384">


 
<div class="field field-name-field-page-description field-type-text field-label-hidden">
<div class="field-items">
<div class="field-item even" property="schema:description">Known issues and release notes for PyFerret.</div>
</div>
</div>

<div class="content clearfix">
 
<div class="field field-name-body field-type-text-with-summary field-label-hidden">
<div class="field-items">
<div class="field-item even" property="content:encoded"><p><a href="downloads.html">Previous</a></p>
<p>
</p><p>The following describes changes in behavior, <a href="#KNOWNISSUES">known issues</a>, <a href="#DESIREDENHANCEMENTS">desired enhancements</a>, and <a href="#RELEASENOTES">release notes</a> for PyFerret. The known issues listed are those specific to PyFerret and does not include issues with the Ferret engine contained within PyFerret.</p>
<h3>Changes in behavior</h3>
<dl><dt>Saved plot sizes can now be specified directly.</dt>
<dd>The pixel size of saved raster (PNG, JPEG) plots can be specified directly using the <i>/XPIXEL</i> or <i>/YPIXEL</i> options to the <i>FRAME</i> command.  The inch size of saved vector (PDF, PS, SVG) plots can be specified directly using the <i>/XINCH</i> or <i>/YINCH</i> command to the <i>FRAME</i> command.  The plot to be saved is just scaled to the desired size when written to file.  The aspect ratio will be maintained, and all parts of the plot, including line thickness, are scaled.<br />The <i>/XPIXEL</i> or <i>/YPIXEL</i> options to the <i>FRAME</i> command.  The inch size of saved vector (PDF, PS, SVG) plots can be specified directly using the <i>/XINCH</i> or <i>/YINCH</i> command to the <i>FRAME</i> command.  The plot to be saved is just scaled to the desired size when written to file.  The aspect ratio will be maintained, and all parts of the plot, including line thickness, are scaled.<br />The <i>/XPIXEL</i> and <i>/YPIXEL</i> options to the <i>SET WINDOW</i> command are only used to set the window aspect ratio and set the default values of <i>/XPIXEL</i> and <i>/YPIXEL</i> for the <i>FRAME</i> command.So normally these options to <i>SET WINDOW</i> are only useful for creating a raster plot of some exact pixel dimensions, or for creating a plot window with an appropriate aspect ratio.<br />The <i>/SIZE</i> option to <i>SET WINDOW</i> is deprecated in PyFerret, and is only used to assign <i>/XPIXEL</i> and <i>/YPIXEL</i> values in the <i>SET WINDOW</i> command.</dd>

<dt>Plot inch size can now be specified.</dt>
<dd>Users that wish to control the values of <i>PPL$WIDTH</i> and <i>PPL$HEIGHT</i>, the "canvas" inch size of a plot, can now do so using the <i>/XINCH</i> and <i>/YINCH</i> options (or one of these options and the <i>/ASPECT</i> option) to the <i>SET WINDOW</i> Ferret command. The default sizes of text are adjusted with these options, but the default thickness of lines do not.One can use the <i>/THICKEN</i> option to <i>SET WINDOW</i> to scale the thickness of all lines as desired.<br />Most users should not need to use the <i>SET WINDOW /XINCH /YINCH</i> options. To obtain a saved vector plot of a given inch size, one should just use the <i>/XINCH</i> or <i>/YINCH</i> option to the <i>FRAME</i> command.</dd>

<dt>Saving images in any of the supported format</dt>
<dd>One can save the plot in any of the supported formats at any time using the <em>FRAME /FILE /FORMAT</em> Ferret command.If the <em>/FORMAT</em> option is not specified, the format for the image file is guessed from the filename extension (for example, PNG for <em>.png</em>, PostScript for <em>.ps</em>, PDF for <em>.pdf</em>).<br />The use of the <em>-batch</em> command-line option, and the <em>SET MODE METAFILE</em> and <em>SET GIFFILE</em> Ferret commands are deprecated in PyFerret. Instead, one  just save the plot using the <em>FRAME</em> Ferret command in the appropriate formatat the appropriate time.</dd>
<dt>GIF files are no longer created</dt>
<dd>PyFerret does not produce GIF image files since the underlying graphics engines do not support creating images in GIF format. To support existing scripts, anytime a GIF image is requested, a PNG image will be saved with the same file name except with the <i>.png</i> extension instead of <i>.gif</i></dd>
<dt>GKS metafiles (<i>.plt</i> files) are no longer created</dt>
<dd>PyFerret does not produce GKS metafiles since the underlying graphics engines do not support creating GKS metafiles. To support existing scripts, anytime a GKS metafile is requested, a PostScript file will be saved with the same file name except with the <i>.ps</i> extension instead of <i>.plt</i></dd>
<p><a name="PPLCOLORCOB" id="PPLCOLORCOB"></a><br /></p><dt>Changing a color does not change previously drawn items</dt>
<dd>In Ferret, the XGKS graphics engine uses color values in a color table when drawing and when refreshing a displayed image. The PPL COLOR command updates the values for a color table entry. So this command modifies the color of all items drawn that use the modified color table entry, including items drawn prior to the PPL COLOR command.<br />In PyFerret, the graphics engines use the color values in the color table only at the time of initial drawing of an item. Thus the PPL COLOR command will only affect the color of items drawn after the command. All items drawn prior to the PPL COLOR command will remain unchanged.</dd>
</dl><p><a name="KNOWNISSUES" id="KNOWNISSUES"></a><br /></p><h3>Known Issues</h3>
<dl><dt>PLOT+ patterns are not supported</dt>
<dd>PLOT+ pattern files are not yet supported by the new graphics engines. Thus <i>/pattern</i> qualifiers on Ferret plotting commands usually will result in an error.</dd>
<dt>Shared time axis not always recognized with putdata and put functions</dt>
<dd>When bringing Python data into Ferret using the PyFerret put or putdata functions, sometimes a time axis in common with an existing time axis in Ferret is not recognized. This is most likely due to trying to map times derived from the six integer array values (year, month, day, hour, minute, second) to a single floating point time value.</dd>
<dt>A "metafile" name with a <i>.plt</i> extension can sometimes cause errors</dt>
<dd>Setting the "metafile" name (using the <i>SET MODE METAFILE:filename</i> Ferret command) to a filename with the <i>.plt</i> extension can sometimes cause errors. PyFerret should automatically convert to using PostScript format in these case, using the filename with a <i>.ps</i> extension instead of the <i>.plt</i> extension. But under some circumstances this process fails.Note, however, that use of <i>-batch</i> and <i>SET MODE METAFILE</i> are now deprecated as images can be saved at any time using the  <i>FRAME /FILE</i> command.</dd>
<dt>Color name "white" not always white<br /></dt>
<dd>If the number of line colors (<i>SET MODE LINECOLORS</i>) is left at the default value of six, the color name <i>white</i> does not give a white color.  If the number of line colors is increased to seven of more, then the color name <i>white</i> does give a white color, which is pen (color) number seven.  Note that the default pen (color) numbers beyond six have changed to go from white to darker shades of gray.<br /></dd>
<dt>Incomplete display of the plot after changing window size or aspect ratio.</dt>
<dd>In some rare instances the plot is not completely displayed, or is not scaled appropriately to fit the displayed window.This has been seen sometimes with the first window displayed or sometimes when the aspect ratio changes.However, if one saves the plot to file, the complete plot is saved.The complete and correctly scaled plot will be show if one starts to adjusts the size of the displayed window using the mouse on the window frame.</dd>
<dt>The Ferret "where" function does not work properly in PyFerret.</dt>
<dd>The graphics input function, which returns coordinates of a mouse-click, has yet to be implemented for the new graphics engines in PyFerret. As a result, the Ferret "where" function returns random coordinates without any interaction with the displayed window.</dd>
<dt>Darker lines and polygons in shade and fill plots when using translucent colors </dt>
<dd>Some darker colored lines, and even some darker colored polygons, will appear in shade and fill plots when using translucent colors.</dd>
<dt>The get and getdata methods do not record the dataset</dt>
<dd>The get and getdata methods need to return the dataset ID forthe data. For getdata, this would be the value of the "dset" key. TheID should be the filename of the dataset from which the came from.</dd>
<dt>When adding a Python-defined data variable (put and putdata), an existing matching time axis may not be recognized.</dt>
<dd>Seconds are currently integer values and thus can causeslight differences in time values. Seconds need to be saved as afloating-point value.</dd>
<dt><i>SHOW DATA</i> for a data variable added from Python sometimes does not display the grid correctly</dt>
<dd>The grid shown for a data variable added from Python is sometimes notdisplayed correctly in the SHOW DATA Ferret command, although thegrid is correct when displayed using the SHOW GRID Ferret command.</dd>
<dt><i>FRAME /FILE=</i>... in unsupported formats does not immediately give back an error.</dt>
<dd>An error message is generated, but not displayed until the next Ferret command is given.</dd>
</dl></p>
<p><a name="DESIREDENHANCEMENTS" id="DESIREDENHANCEMENTS"></a><br /></p><h3>Desired Enhancements</h3>
<dl><dt>Support patterns or some hatching</dt>
<dd>The *.pat pattern files, as used in <i>FILL /PATTERN=</i>... are not supported.<br /> Alternatively (preferably) support hatching as this is used to mark areas where another color is not possible (as in black-and-white) or where the user wants the underlying color to show through.</dd>
<dt>PyFerret python method to get a Ferret symbol value</dt>
<dd>Create a method in PyFerret to return the value of a Ferret symbol as a Python string.</dd>
<dt>Enable PyFerret to work with commands piped to it</dt>
<dd>Piping output from a command into PyFerret, such as <em>cat my.jnl | pyferret</em> does not work.</dd>
<dt>Recognize embedded newlines in a pyferret.run command</dt>
<dd>Commands need to either separated with semicolons or entered as separated pyferret.run commands. To simplify using a multiline (triple-quoted) Python string as a source of commands, embedded newlinesshould also be recognized for separating commands.</dd>
<dt>Create multipage PS, PDF, SVG</dt>
<dd>Allow the PyFerret user to create multi-page PS, PDF, and SVG output files with the FRAME command; possibly by adding /multi, /append, and /close options to the frame command.</dd>
<dt>Provide layers (groups) in graphics output files where supported (SVG)</dt>
<dd>The SVG format provides support for grouping sets of drawingcommands. (The &lt;g&gt; XML tag.) This presumably turns into layersin inkscape, which are quite useful for editing graphics. So it wouldbe very useful if PyFerret would produce SVG files that separatedifferent parts of the drawing into layers (e.g., separate the axesfrom fills and shades, and maybe separate different fills and shadessuch as <em>shade sst</em> from <em>go fland</em>.)</dd>
<dt>Create get and put methods for strings in PyFerret</dt>
<dd>Generate PyFerret methods for getting and putting (arrays of)strings from/to Ferret. Maybe have getstring/putstring for a singlestring (no axes), putstringarray/getstringarray for arrays of strings(with axes).</dd>
<dt>PyFerret confirmation for Help-&gt;Exit in graphics window</dt>
<dd>Add a confirmation dialog to Help -&gt; Exit from the menubar, explaining that this should only be used when PyFerret hascrashed or somehow shutdown without closing the window. Exiting awindow that PyFerret thinks is still viable will cause issues - most likely a crash.</dd>
<dt>Scan for +-Inf in Python external function results, converting to the missing value</dt>
<dd></dd>
</dl><p><a name="RELEASENOTES" id="RELEASENOTES"></a><br /></p><h3>Release Notes for PyFerret 1.2.0</h3>
<dl><dt>Native fonts can be used for text</dt>
<dd>Text in PyFerret can now be drawn using fonts provided by your system.The <em>SET TEXT</em> Ferret command can be used to change the default font, color, and size of text drawn by PyFerret.When one of the system fonts are used in a plot, the text will be saved as character glyphs or text when the plot is saved to file.The font in traditional Ferret is still accessible by using <em>SET TEXT /FONT=HERSHEY</em>, but just as in traditional ferret,any text drawn in this font becomes just more drawn lines in the plot when saved to file.<br />When using native fonts, an HTML-like mark-up (style specification) language is used for special characters, superscripts, and subscripts.See <a href="../users-guide/commands-reference/SET.html#pyferret_embedded_symbols">PyFerret: embedding Special Characters in labels</a> for more information.When using the Hershey font from traditional Ferret, the mark-up language used in traditional Ferret is still used.</dd>                                                                         
<dt>Fuzzy PNG plots</dt>
<dd>When using the "-nodisplay" command-line option, lines in PNG plots were "fuzzy". This was especially noticeable in small PNG plots.This is actually a known issue in older versions of the Cairo library, including the version provided by RHEL6, when using the recording surface to store a plot.This is now fixed in PyFerret by statically linking in a private copy of the latest cairo library.PyFerret will use this private copy of the cairo library for its own use, but does not expose it to other programs (s                                                                                 
<dt>Thin white lines in plots</dt>
<dd>The appearance of this white lines in PostScript and PDF files is actually a known issue with ghostscript, the standard program (possibly via the evince program) used to display these files in Linux operating systems. Examining the PDFs with Acrobat Reader does not show the white lines problem.The ghostscript user's manual <a href="https://ghostscript.com/">https://ghostscript.com/</a>, under <i>Rendering parameters</i>, recommends rendering the file again with the -dGraphicsAlphaBits=1 command-line option to fix the display of the plot.
To work around this problem, the option /OUTLINE= was added to the Ferret command SET WINDOW.This option, if not zero, specifies the thickness of an outline to be drawn around every polygon that is drawn.Using this option with a very small value causes the polygons to slightly overlap.If using opaque colors, a small overlap should not be noticeable and prevents the white lines from appearing.
</dd>

<dt>PyFerret commands added to Ferret documentation</dt>
<dd>Command options supported by PyFerret, but not Ferret, have been added to the standard Ferret documentation.These PyFerret-only options are clearly marked as not being available in standard Ferret.</dd>
</dl><p>
</p><h3>Release Notes for PyFerret 1.0.2</h3>
<dl><dt><em>/SIZE</em> option to <em>SET WINDOW</em> just scales the displayed image</dt>
<dd>The behavior of the <em>/SIZE</em> option to <em>SET WINDOW</em> was changed so thatis just scales the displayed image (modifies the pixel size of the image). This causes line thickness to also be scaled, but line thickness scaling can be adjusted using the <em>/THICKEN</em> option to <em>SET WINDOW</em>.The previous behavior of adjusting the "inch" size caused severe compatibility issueswith scripts relying on traditional Ferret's behavior of having a fixed "inch" size for a plot at a given aspect ratio.</dd>
</dl><p>
</p><h3>Release Notes for PyFerret 1.0.0</h3>
<dl><dt>Graphics quality and other graphics options are part of the SET WINDOW command</dt>
<dd><i>SET GRAPHICS</i> has been removed and is replaced by <i>SET WINDOW /QUALITY</i>=.... The anti-alias control also part of <i>SET WINDOW</i>. The default is HIGH quality graphics with anti-aliasing.Unmapped, high-quality graphics now specified using the <em>-nodisplay</em> command line option.</dd>
<dt>Save file in any format at any time with -nodisplay</dt>
<dd>Images can be saved in any of the supported formats (PNG, PS, PDF, SVG) at anytime during the session using the <i>FRAME</i> Ferret command, reagardless of whether the graphics are displayed or not (if the <em>-nodisplay</em> command-line option is given). An image can also be saved in multiple formats by repeated use of the <i>FRAME</i> command.</dd>
<dt>Option to set color and transparency (opacity) of graphics background</dt>
<dd>Color and opacity of the background can be specified with the <em>SET WINDOW /COLOR=... /OPACITY=...</em> options. This background color is used for both the displayed and saved image.</dd>
<dt>Global line thickness scaling factor; more line thickness control in new line specifications</dt>
<dd>The <em>SET WINDOW /THICKEN=...</em> allows setting of a global line thickness scaling factor.Line drawing commands also support a <em>/THICK=...</em> option that allows specifying line thickness(in points; 1/72 of an inch) as a floating point value. The value specified will be subject to scaling by the global line thickness scaling factor.</dd>
<dt>Dynamic resizing of the displayed image</dt>
<dd>The displayed image now resizes to fill the area inside the display window. The dialog from the menu item <em>Scene -&gt; Scale</em> allows one to disable or re-enable this behavior.</dd>
<dt>Symbol to differentiate PyFerret from traditional Ferret</dt>
<dd>The Ferret symbol <i>PROGRAM_NAME</i> was added. The value is <em>Ferret</em> in Ferret, <em>PyFerret</em> in PyFerret.</dd>
<dt>Enable transparency value in color specifications (in particular, for shading overlay)</dt>
<dd>Opacity in all color specifications is supported. The <em>/COLOR=</em> option and colors in palettessupport (
<dt>Fixed: Inside a viewport, plots overlay instead of replace previous plot</dt>
<dd>Clearing and replotting only within a viewport (such as from <em>set view ul</em>) is now properly supported.</dd>
<dt>Fixed: White lines in shade and fill plots</dt>
<dd>The problem with white lines showing up primarily in PS and PDF out has (mostly) been fixed.The PDFs produced from high-quality displayed graphics plots can still show some of these white lines, although they are thinner than before. The PDFs produced from <em>-nodisplay</em> plots do nothave these lines. Note, however, that with translucent colors, darker lines now show up.</dd>
<dt>Fixed: Window displayed when using pyferret -unmapped</dt>
<dd>Although the <em>-unmapped</em> command-line option is suppose toprevent the display of any graphics, setting the graphics quality tohigh or draft caused PyFerret to switch to that graphics mode and display windows.This has now been fixed and any /QUALITY options are ignored whenPyFerret is run with the <em>-nodisplay</em> (or <em>-unmapped</em>) command-line option.</dd>
<dt>Fixed: CTRL-C exits PyFerret</dt>
<dd>When PyFerret is run using the <em>pyferret.csh</em> script, CTRL-C will exit the script. This is an issue with tcsh and not PyFerret. To circumvent this bug in tcsh, theBourne-shell script <em>pyferret.sh</em> is always used for the <em>pyferret</em> link, and thus is the script run (even in C-shell environments) when invoking <em>pyferret</em>.The <em>pyferret.csh</em> script should only be used if you wish to <em>source</em> this script from a C-shell.</dd>
<dt>Reverted: CTRL-C while reading a NetCDF variable can cause PyFerret to crash later</dt>
<dd>When using pyferret.sh (see previous issue), entering CTRL-C while Ferret is reading data using NetCDF successfully stopped the reading of the variable. However, the next use of data from the that NetCDF data set would cause a crash. After much discussion, it was decidedto return to the behavior where CTRL-C will not stop the reading of data using NetCDF.</dd>
<dt>Fixed: CTRL-C can cause the graphics display to crash</dt>
<dd>When using displayed graphics, entering CTRL-C could sometimes cause the graphics display program to exit. The graphics display program now ignores any CTRL-C that might leak tothe graphics display.</dd>
<dt>Fixed: Graphics not updated in pyferret.run semicolon-separated commands</dt>
<dd>Removed the deferral of updating graphics.</dd>
<dt>Fixed: <i>FRAME /FILE=</i>... in a script does not have complete graphics</dt>
<dd>Removed the deferral of updating graphics.</dd>
<dt>Show graphics details (quality, anti-alias) as part of SHOW WINDOW</dt>
<dd></dd>
</dl><p>
</p><h3>Release Notes for PyFerret 0.0.9</h3>
<dl><dt>PyFerret uses double-precision floating-point values for all calculations and data arrays.</dt>
<dd>PyFerret has been updated to use Ferret 6.8.2 as its Ferret engine. One major enhancement to Ferret 6.8.2 was the use of double-precision floating-point values for all calculations and data arrays. See <a href="../release-notes/version-6-8-release-notes.html#DoublePrecision">these Ferret release notes</a> for more details about this enhancement in Ferret. <br />Because of this change, NumPy numeric data arrays used by PyFerret now have the type NumPy float64 (or Python float). If your Python code explicitly creates NumPy float32 arrays that are given to PyFerret, the data type will need to be changed to float64. For most users, however, no changes to your Python code will be required.</dd>
<dt>PyFerret implements a six-dimensional grid.</dt>                                                                     
<dt>PyFerret implements a six-dimensional grid.</dt>
<dd>This also is a result of the update of PyFerret to use Ferret 6.8.2 as its Ferret engine. This Ferret enhancement provides standard axes for ensembles as well as forecasts in a data array. See <a href="../release-notes/version-6-8-release-notes.html#SixDim">these Ferret release notes</a> for more details about this enhancement in Ferret. <br />Because of this change, NumPy numeric data arrays returned by PyFerret now have six dimensions instead of four. As before, the NumPy array shape value for both singleton and normal (orthogonal, unused) axes is one. The additional axes can be used as desired in Ferret external functions written in Python. If not specified, the usual default values (such as the result axis is inherited from the arguments) will apply to the two additional axes.</dd>
<dt>Ferret Fortran external functions work properly.</dt>
<dd>Ferret Fortran external functions are created from Fortran source files that are compiled and linked to create a shared-object (.so) library file. These .so library files are contained in a directory listed in the <i>$FER_EXTERNAL_FUNCTIONS</i> environment variable. To work with PyFerret, these external functions will need to be rebuilt, not only to use double-precision (possibly six-dimensional) arrays, but also to use the PyFerret shared-object library to resolve calls to Ferret utility functions (the ef_... functions). See the <a href="fortranefs/">Ferret Fortran external functions</a> section of the PyFerret documentation for more information.</dd>
<dt>Command-line options <i>-unmapped</i>, <i>-gif</i>, <i>-batch</i> turn on anti-aliasing</dt>
<dd>When the <i>pyferret</i> script is called with either the <i>-unmapped</i>, <i>-gif</i>, or <i>-batch</i> command-line options, anti-aliasing is turned on by default to be consistent with the Ferret command <i>SET GRAPHICS UNMAPPED</i>.</dd>
<dt>Filenames completed using the <b>TAB</b> key<br /></dt>
<dd>At the Ferret prompt in PyFerret, the <b>TAB</b> key will complete a partial file name or provide a list of matching file names if there is more than one. At the Python prompt, however, whatever completion method was used with the readline module will still be used (by default, the method in rlcompleter, which provides a list of matching Python variables and methods).</dd>
<dt>The initialization script <i>$PYTHONSTARTUP</i> is explicitly read</dt>
<dd>When Python starts under normal conditions, Python executes the commands given in an initialization script named by the environment variable <i>PYTHONSTARTUP</i>. When using the pyferret shell scripts, however, this initialization is not automatically performed by Python (because of the use of the <i>-i</i> Python command-line option).<br />To provide behavior consistent with a normal start-up of Python, the <i>pyferret.init</i> method (which is used by the pyferret shell scripts) now executes the commands given in an initialization script named by the environment variable <i>PYTHONSTARTUP</i>. When using the pyferret shell scripts, however, this initialization is not automatically performed by Python (because of the use of the <i>-i</i> Python command-line option).<br />To provide behavior consistent with a normal start-up of Python, the <i>pyferret.init</i> method (which is used by the pyferret shell scripts) now executes the commands in the <i>$PYTHONSTARTUP</i> initialization script unless <i>-secure</i> is given in the arguments (given as a command-line option).</dd>              
<dt><i>PPL COLOR</i> command works<br /></dt>
<dd>The <i>PPL COLOR</i> command now works as expected, changing the color value used for a color number in subsequent drawing commands.However, see <a href="#PPLCOLORCOB">the note above</a> about the change in behavior of this command in PyFerret.</dd>
<dt>Images automatically saved have an opaque white background by default</dt>
<dd>Images automatically saved from using the <i>-batch filename</i> command-line option or the <i>SET MODE METAFILE:filename</i> Ferret command now have an opaque white background. Use the <i>-transparent</i> command-line option to save the image with a transparent background (if transparency is supported by the image format used).</dd>
<dt>The window title of the default first window is properly assigned</dt>
<dd>The default first window displayed now has the standard window title of <i>FERRET_(windownumber)_(datestamp)</i>.</dd>
<dt>Python modules gcircle and eofanalysis provided</dt>
<dd>The gcircle module provides some simple functions, using longitudes and latitudes, working with great circles on a sphere.<br />The eofanalysis module provides an EOFAnalysis class for performing empirical orthogonal function (EOF) analysis of space-time data, similar to that provided in the Ferret eof... functions.  The EOFAnalysis class also provides methods for obtaining the explained data values from a truncated sum of EOFs and time amplitude function (TAF) products, of from a single EOF and TAF product. <br />Both these modules are pure-Python packages that use NumPy methods to provide efficient numerical array processing. See the Python help for these modules, or view the Python source files under the $FER_DIR/lib/python2.x/site-packages (where x is 6 or 7) directory for more information.</dd>                                                                                                                                                                                
</dl></div>
</div>
</div>

</div>

<div class="clearfix">
<nav class="links node-links clearfix"></nav>

</div>
</article>
</div>
</div>
</div>      </div>
</div>  </div>
</div></section>    
 
<footer id="section-footer" class="section section-footer">

  <div id="zone-footer-wrapper" class="zone-wrapper zone-footer-wrapper clearfix">  
  <div id="zone-footer" class="zone zone-footer clearfix container-12">
    <div class="grid-8 region region-footer-first" id="region-footer-first">
  <div class="region-inner region-footer-first-inner">
    <div class="block block-block block-1 block-block-1 odd block-without-title" id="block-block-1">
  <div class="block-inner clearfix">
                
  </div>
</div><div class="block block-block block-2 block-block-2 even block-without-title" id="block-block-2">
  <div class="block-inner clearfix">
                
  </div>
</div><div class="block block-menu block-menu-footer-first-menu block-menu-menu-footer-first-menu odd block-without-title" id="block-menu-menu-footer-first-menu">

  </div>
</div>  </div>
</div><div class="grid-4 region region-footer-second" id="region-footer-second">
  <div class="region-inner region-footer-second-inner">
    <div class="block block-menu block-menu-footer-second-menu block-menu-menu-footer-second-menu odd block-without-title" id="block-menu-menu-footer-second-menu">
  <div class="block-inner clearfix">
                
  </div>
</div>  </div>
</div>  </div>
</div></footer>  </div>  <div class="region region-page-bottom" id="region-page-bottom">
  <div class="region-inner region-page-bottom-inner">
      </div>
</div>  <div id="body-bg-bottom"></div>
</body>
</html>
